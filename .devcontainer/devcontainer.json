// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/anaconda-postgres
{
	"name": "Score Keywords Project",
	"dockerComposeFile": "docker-compose.yml",
	"service": "app",
	"workspaceFolder": "/home/appuser/scorekeywords",
	"features": {
		"ghcr.io/warrenbuckley/codespace-features/sqlite:1": {},
		"ghcr.io/robbert229/devcontainer-features/postgresql-client:1": {
			"version": "16"
		}
	},

	// Features to add to the dev container. More info: https://containers.dev/features.
	// "features": {},

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	"forwardPorts" : [ 
		5432,  // PostgreSQL database (pgdb)
		6379,  // Redis 
		8000,  // Django development server
		8080   // Live server
	],

	// Use 'postCreateCommand' to run commands after the container is created.
	"postCreateCommand": "ls -la /home/appuser/scorekeywords && pwd && pip install -r requirements.txt && pre-commit install && python manage.py migrate",
	"postStartCommand": "python manage.py collectstatic --noinput",
	"waitFor": "postCreateCommand",

	// Configure tool-specific properties.
	"customizations": {
		"vscode": {
			"extensions": [
				"ms-python.python",
				"ms-python.vscode-pylance",
				"ms-python.black-formatter",
				"charliermarsh.ruff",
				"batisteo.vscode-django",
				"ms-azuretools.vscode-docker",
				"mtxr.sqltools",
				"mtxr.sqltools-driver-pg",
				"redhat.vscode-yaml",
				"yzhang.markdown-all-in-one",
				"david-anson.vscode-markdownlint",
				"ms-python.pytest",
				"ms-python.coverage-gutters",
				"humao.rest-client",
				"njpwerner.autodocstring",
				"mhutchie.git-graph",
				"wholroyd.jinja",
				"mgesbert.python-path"	
			],
			"settings": {
				// Python Configuration
				"python.defaultInterpreterPath": "/usr/local/bin/python",
				"python.analysis.typeCheckingMode": "basic",  // Add type checking
				"python.analysis.autoImportCompletions": true,  // Add auto-imports
				
				// Code Formatting
				"editor.formatOnSave": true,
				"editor.codeActionsOnSave": {
					"source.organizeImports": true,
					"source.fixAll": true  // Add automatic fixes
				},

				// Python-specific settings
				"[python]": {
					"editor.formatOnSave": true,
					"editor.defaultFormatter": "ms-python.black-formatter",
					"editor.rulers": [88],  // Add line length ruler
					"editor.wordWrapColumn": 88,
					"editor.tabSize": 4
				},

				// Testing
				"python.testing.pytestEnabled": true,
				"python.testing.unittestEnabled": false,
				"python.testing.pytestArgs": [
					"tests",
					"-v",
					"--cov"
				],

				// Django
				"files.associations": {
					"**/templates/*.html": "django-html",
					"**/templates/*": "django-txt",
					"**/requirements{/**,*}.{txt,in}": "pip-requirements"
				},

				// Documentation
				"autoDocstring.docstringFormat": "google",
				"autoDocstring.startOnNewLine": true,

				// File handling
				"files.trimTrailingWhitespace": true,
				"files.insertFinalNewline": true,
				"files.trimFinalNewlines": true,

				// Git
				"git.autofetch": true,
				"git.enableSmartCommit": true,

				// Replace Copilot formatters with more specific ones
				"[yaml]": {
					"editor.defaultFormatter": "redhat.vscode-yaml"
				},
				"[markdown]": {
					"editor.defaultFormatter": "yzhang.markdown-all-in-one"
				}
			}
		}
	}

	// Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root.
	// "remoteUser": "root"
}
